<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_2_0.xsd"
	version="2.0">
	<!-- Marking transaction-type JTA because we will be using Aries JTA to 
		handle the transaction -->
	<persistence-unit name="FuseJPA"
		transaction-type="JTA">

		<!-- A human-readable description for the persistence unit. -->
		<description>Persistence unit for Fuse JPA testbed</description>

		<!-- For this demo, we are using Hibernate as our JPA implementation. -->
		<provider>org.hibernate.ejb.HibernatePersistence</provider>

		<!-- The data sources have been defined and published into the OSGi Service 
			Registry by the `datasource' module. You can also use JNDI references to 
			refer to services in the OSGi Service Registry, which is what we're using 
			here. -->
		<jta-data-source>osgi:service/jdbc/transactionsdbxa</jta-data-source>
		<!-- e.g. to verify schema -->
		<non-jta-data-source>osgi:service/jdbc/transactionsdb</non-jta-data-source>

		<class>configuration.model.Configuration</class>
		<class>configuration.model.ConfigurationValue</class>
		
		<exclude-unlisted-classes>true</exclude-unlisted-classes>

		<!-- Additional properties for configuring the persistence unit and/or 
			the underlying JPA implementation. In our case, these properties contain 
			additional configuration for HIbernate. -->
		<properties>
			<property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQL82Dialect" />
			<property name="hibernate.max_fetch_depth" value="3" />
			<property name="hibernate.hbm2ddl.auto" value="create" />
			<property name="hibernate.show_sql" value="false" />
			<property name="hibernate.default_schema" value="transactions" />
		</properties>
	</persistence-unit>
</persistence>